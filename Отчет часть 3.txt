Здравствуйте, Валентина Валерьевна!

Лабораторная 3, часть 3.

1. Постановка задачи:
Для программы, вычисляющей процентное соотношение размеров файлов и папок в директории написать графический интерфейс, позволяющий
выбирать способ группировки и способ отображения данных.
2. Предлагаемое решение:
Для решения данной задачи был предложен поведенческий паттерн проектирования наблюдатель, который создает механизм подписки, позволяющий одним объектам следить 
и реагировать на события, происходящие в других объектах. 
Далее, для связи наблюдателя и классов, отвечающих за отображение данных был предложен паттерн адаптер, преобразующий интерфейс классов, отображающих данные к 
интерфейсу подписчиков наблюдателя.
Наконец, для создания объектов типа QPieChart и QBarChart был предложен подход шаблонного метода, позволяющий определить скелет алгоритма и переложить некоторые
его шаги на подклассы. В данном случае создание объекта QChart состоит из 3х этапов - создание QChart, привязка Series и отрисовка легенды. Для BarChart и PieChart
привязка series различна, поэтому шаблонный метод здесь применим.
MainWindow будет хранить объекты-адаптеры и связывать их с наблюдателями в конструткоре.
3. Шаги реализции.
Для реализации данной задачи был разработан список классов, а именно
а) Класс FileExplorerObserver - класс паттерна Наблюдатель. Содержит в себе QList из указателей на подписчиков типа FileExplorerListener, методы remove() и subscribe() для добавления и удаления подписчиков
и метод notify() для их оповещения.
Объект этого класса был помещен в класс-калькулятор SizeCalculator, после завершения работы метода Calculate которого, у
observer вызывается метод notify(), оповещающий подписчиков об обновлении данных.
б) Класс FileExplorerListener - интерфейс подписчиков. Содержит чистый виртуальный метод update(). Наследники переопределяют этот метод в зависимости от нужной реакции на обновления.
в) Класс Chart, создающий диаграммы. Содержит методы createChart, drawLegend и drawChart. Метод drawChart чисто виртуальный и должен быть переопределен наследниками PieChart и BarChart, для реализации шаблонного метода
г) Классы PieChart и BarChart - наследники Chart, переопределяющие метод drawChart в соответствии с механизмом создания конкретной диаграммы.
д) Классы - адаптеры ListAdapter, PieChartAdapter и BarChartAdapter. Связывают интерфейсы классов отображающих данные и классов-подписчиков наблюдателя. содержат переопределенный метод update и 
член-данное, соотв. отображающему классу. метод update() переопределен так, что обновляет данные отображающих классов.

4. Тестирование 
Программа протестирована с файлами из части 1. Все тесты прошли успешно. 
Так же тестировалась работа программы в целом (переключение между различными видами, стратегиями, папками)
Т.к. на данном этапе реализации происходит контроль ввода пользователя (пользователь выбирает директорию с помощью treeView) то большинство исключений теряют смысл, тк
проверяют существование папки и корректность пути. Здесь же путь составляется с помощью индексов FileSystemModel и treeView, поэтому он не может быть неправильным.